// Trying out a new blog article page:
/*
.is-blog-article {
    .l-primary-content__header .c-panel {
        margin-left: auto;
        margin-right: auto;
        max-width: 120rem;
    }
}

@media only all and (min-width: 70em) {
    .is-blog-article {
        .l-primary-content__main.has-longform-content {
            width: 75%;
        }
    }
    
}
*/
/*
@media only all and (min-width: 70em) {
    .is-blog-article {

        .l-primary-content__header .c-panel {
            padding-top: 0;
            margin-left: $s__sz-m;
            margin-right: $s__sz-m;
            margin-top: -6rem;
            background: #fff;
            position: relative;
        }


        .c-hero {
            width: 75%;
        }

        .l-primary-content.l-primary-content > * {
            width: 75%;
        }
        
        .tmp.tmp.tmp {
            width: calc(25% - #{$s__sz-m * 2});
            position: absolute;
            top: $s__sz-m;
            right: $s__sz-m;
        }

    }
}
*/

/*.is-blog-article {



    @media only all and (min-width: 50em) {


        .c-hero {
            width: 75%;
        }

        .l-primary-content__header .c-panel {
            padding: $s__sz-m;
            margin-left: $s__sz-m;
            margin-right: $s__sz-m;
            margin-top: -6rem;
            background: #fff;
            position: relative;
            z-index: 1;
        }


    }

    .l-primary-content.l-primary-content > * {
        width: 75%;
    }


}
*/

// So the current margin approach falls over a bit when there are hidden elements as the first or
// last child of a container. E.g. Research filter form.
// Attempt to correct these edge cases here: (note we can't do "one before last script element")
script:first-child + * {
    margin-top: 0;
}

// Filterability uses 'hidden' to hide unmatched items in the results list, but it's a weak selector
// and easily overridden (e.g. Research page cards are in `li.l-box` which declares `display block`
// and overrides the hidden attribute.
// I don't want to use `!important` in StartCSS as I'm sure there are patterns that override the
// hidden attribute for fallback purposes, so I'm having to scope it here. Filterability doesn't
// have any stylesheet, so I'll have to think about how to incorporate this there.
[filterable_item][hidden] {
    display: none !important;
}



// Fix IE11 sticky footer - need to put this in proper place:

@media #{$s__ie10-11} {
    body {
        //height: 10000vh;
        //max-height: 100%;
        flex-direction: column;

        & > * {
            //flex: 1 0 auto;
        }
    }
}

// IE11 doesn't use the width/height attributes properly, so enforce those:
@media #{$s__ie10-11} {
    svg[width="1.25em"][height="1.25em"] {
        width: 1.25em;
        height: 1.25em;

    }
}

#highlighter-end,
#highlighter-start {
    display: none;
}

/*---------------------*/

// For use on PRU homepage - not sure where this best fits in.
.video-center.video-center.video-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
    background: #333;
}

/*---------------------*/


// Used for 'invisible' iframe on https://www.npeu.ox.ac.uk/privacy-cookies
.fluid-frame {
    border: 0;
    width: 100%;
}

/*---------------------*/

// Note Safari 10- doesn't factor in min/max width/height when deciding how many items can fit on
// a multi-line flex container.
// This means that the usual fab-four technique doesn't work as expected.
// This is used for Trial INfo modules (at least)
.dl-2-col {
    display: flex;
    flex-wrap: wrap;

    margin: 0;
    max-width: $longform-content-max-width;
}

.dl-2-col dt {
    flex: 1 0 8em;

    margin: 0;
}

.dl-2-col dd {
    flex: 1 0 calc(100% - 9em);
    align-self: flex-end;

    margin: 0;
    padding-left: 1em;
}

// IE11 needs a wrapper to make the flex behave properly, which I can't add to the markup.
@media #{$s__ie10-11} {
    .dl-2-col {
        display: block;
    }
}



/*---------------------*/

// Currently only one use-case for this: TOAST - TOFS Podcast - image looks better pulled up to the 
// header (negated header margin).
.u-negate-space-below {
    margin-bottom: -$s__sz-m !important;
}


/*---------------------*/

// Better visibility for dropdowns (esp. single-item ones).
.nav-bar__main .dropdown__area {
    border: $s__sz-xs solid rgba(255,255,255,.7);
    border-top-width: 0;
    margin-left: -$s__sz-xs;
}

/*---------------------*/


// Utilitext improvements
/*
p[role="list"] {
    overflow-x: hidden;
    overflow-y: visible;
    display: flex;
    flex-wrap: wrap;
}


span[role="listitem"] {
    white-space: nowrap;
    padding-left: 1.5em;
    margin-left: -1.5em;
    margin-right: 1.5em;
    text-indent: -0.15em;
}

span[role="listitem"]::before {
    content: ' | ';
    text-align: center;
    display: inline-block;
    width: 1.5em;
    height: 1em;
    margin-left: -1.5em;
    text-indent: 0.3em;
}

[itemtype="https://schema.org/BreadcrumbList"] span[role="listitem"]::before {
    content: ' / ';
}

span[role="listitem"] > * {
    white-space: normal;
}
*/
////



// Improve link styles
///*
//    1. This size allows 2px on normal fonts, 1px on smaller fonts.
//*
//a[href] {
//
//    margin: 0;
//    padding: 0;
//    border: 0;
//    text-decoration: underline;
//    text-decoration-style: solid;
//    text-decoration-thickness: 0.13em; /* [1] *
//    text-underline-offset: 0.2em;
//
//
//    &:hover, &:hover {
//        border: inherit;
//        text-decoration-style: dashed;
//    }
//}
//
//// FF appears to calculate thickness very differently form Chrome.
//@supports (-moz-appearance:none) {
//    a[href] {
//        text-decoration-thickness: 0.1em; /* [1] *
//    }
//}
//
//// IE11 alternative styles since it doesn't support text-decoration properties:
//@media #{$s__ie10-11} {
//    a[href] {
//        &:hover, &:hover {
//            text-decoration: none;
//        }
//    }
//}
//
//// Give link icons some space unless they're the only child.
//a svg:not(:only-child) {
//    margin-left: 0.25em;
//}
//
//@media #{$s__ie10-11} {
//    a svg {
//        vertical-align: text-bottom;
//    }
//}
//*/
/*! Start CSS Classes. See SCSS file for documentation. */

/*------------------------------------------------------------------------------------------------*\

    Classes

\*------------------------------------------------------------------------------------------------*/


$s__custom-input-focus-shadow: 0 0 0 2px lighten($s__base-ui-color, 20%) !default;


$s__class-namespace: null !default;

// Allow individual classes to be turned off if they're not needed.
$fs__include_class_cta_button:    true !default;
$fs__include_class_bordered:      true !default;
$fs__include_class_padded:        true !default;
$fs__include_class_subtitle:      true !default;
$fs__include_class_tagline:       true !default;
$fs__include_class_composite:     true !default;
$fs__include_class_custom_inputs: true !default;
$fs__include_class_poem:          true !default;

/*
    Resources:
    *
*/

@if $fs__include_class_cta_button {
    /*
        "Buttons" or "CTAs" that are really links should be distinguished from real buttons, so by
        default we're swapping the foreground and background colors:
    */
    a[href].#{$s__class-namespace}button,
    a[href].#{$s__class-namespace}cta {
        @include s__button(
            $s__button-background-color,
            $s__button-text-color,
            20,
            $s__button-background-color
        );

            &:hover,
            &:active,
            &:focus {
                background-color: lighten($s__button-background-color, 55%);
            }
    }

        a[href].#{$s__class-namespace}button--has-icon,
        a[href].#{$s__class-namespace}cta--has-icon {
            position: relative;
        }

        a[href].#{$s__class-namespace}button--has-icon::after,
        a[href].#{$s__class-namespace}cta--has-icon::after {
            content: "";
            display: inline;
            padding-left: 1.25em;
            line-height: 0;
        }

        a[href].#{$s__class-namespace}button--has-icon .icon,
        a[href].#{$s__class-namespace}cta--has-icon .icon {
            position: absolute;
            bottom: 0;
            transform: translateY(-15%);
        }


        // 'Fake' buttons. Over qualified for clarity.
        .#{$s__class-namespace}button[data-text][aria-hidden="true"] {
            @include s__button;
        }

            .#{$s__class-namespace}button[data-text][aria-hidden="true"]::before {
                content: attr(data-text);
            }
}

@if $fs__include_class_bordered {
    .#{$s__class-namespace}bordered {
        @include s__bordered($s__base-line-height, 6px);
        //@include s__bordered($s__base-rem-space-unit, $s__border-width);
    }
}

@if $fs__include_class_padded {
    // Note: the 'collapsible bottom spacing' trick doesn't seem to work if there's no border.
    // Affects: IE9-11
    // Works if pseudo element height is 1px.
    // Adding a transparent border seems to fix it, as does setting it to an inline-block.
    // Not sure which is the best / most reliable approach at the moment, so leaving both in for ref.
    .#{$s__class-namespace}padded {
        //@include s__bordered($s__base-line-height, 1px);
        //border: 1px solid transparent;

        //@include s__bordered($s__base-line-height, 0);
        @include s__bordered($s__base-rem-space-unit, 0px);
        //display: inline-block;
        //width: 100%;
    }
}

@if $fs__include_class_subtitle {
    /*
        1. Prevent element increasing height of parent.
    */
    b.#{$s__class-namespace}subtitle {
        font-size: 0.8em;
        font-weight: inherit;
        font-style: normal;
        line-height: 1;  /* 1 */
    }

    /*
        1. Negate heading margin.
    */
    p.#{$s__class-namespace}subtitle {
        font-size: 1.5em;
        font-weight: inherit;
        margin-top: -#{$s__base-rem-space-unit / 2}; /* 1 */
    }
}

@if $fs__include_class_tagline {
    /*
        1. Negate heading margin.
    */
    .#{$s__class-namespace}tagline {
        font-size: 1.14285714286em;
        margin-top: -#{$s__base-rem-space-unit / 2}; /* 1 */
    }
}

@if $fs__include_class_composite {
    /*
        1. Collapse whitespace.
        2. Prevent extra height being added.
    */
    .#{$s__class-namespace}composite {
        display: -webkit-inline-box; /* 1 */
        display: -ms-inline-flexbox; /* 1 */
        display: inline-flex; /* 1 */
        vertical-align: middle; /* 2 */
        max-width: 100%;

        -webkit-flex-wrap: wrap;
            -ms-flex-wrap: wrap;
                flex-wrap: wrap;

    }

    /*
        1. Prevent extra height being added.
    */
    .#{$s__class-namespace}composite > * {
        vertical-align: top; /* 1 */
        -webkit-flex: 0 1 auto;
            -ms-flex: 0 1 auto;
                flex: 0 1 auto;
    }

    /*
        IE9

        1. Make sure there are no spaces between elements in the markup as the as the white space won't
           collapse.

        2. Hide button.
    */
    @media screen and (min-width:0\0) and (min-resolution:.001dpcm) {
        .#{$s__class-namespace}composite {
            display: inline-block; /* 1 */
            white-space: nowrap; /* 1 */
            overflow: hidden; /* 2 */
        }

        .#{$s__class-namespace}composite > * {
            vertical-align: top;
            display: inline-block;
        }
    }

        .#{$s__class-namespace}composite > *:not(:first-child) {
            border-top-left-radius: 0 !important;
            border-bottom-left-radius: 0 !important;
            // This looks odd in Edge...
            //border-left: 0;
            // ... so try negative margin to tweak:
            //margin-left: -1px;
        }

        .#{$s__class-namespace}composite > *:not(:last-child) {
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
            border-right: 0 !important;
        }
}

@if $fs__include_class_custom_inputs {

    /* CUSTOM INPUTS: RADIOS AND CHECKBOXES */

    /* Hide the real inputs: */
    /* (note this method is important to persist accessibility and keyboard navigation) */
    .#{$s__class-namespace}custom-input[type="checkbox"],
    .#{$s__class-namespace}custom-input[type="radio"] {
        position: absolute;
        opacity: 0;
    }

    /* Prepare for positioning the pseudo-elements: */
    .#{$s__class-namespace}custom-input-label {
        position: relative;
        //vertical-align: middle;
        vertical-align: top;

        /*display: -webkit-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-align-items: center;
             -ms-flex-align: center;
               align-items: center;*/

       padding-left: 1.5em;
    }

    @if $s__input-focus-shadow != false {
        .#{$s__class-namespace}custom-input:focus + .c#{$s__class-namespace}ustom-input-label::before {
            box-shadow: $s__custom-input-focus-shadow;
            outline: 0;
        }
    }

    /* Common psuedo-element styles: */
    .#{$s__class-namespace}custom-input[type="checkbox"] + .#{$s__class-namespace}custom-input-label::before,
    .#{$s__class-namespace}custom-input[type="radio"] + .#{$s__class-namespace}custom-input-label::before {
        display: inline-block;
        content: "";
        width: 1em;
        height: 1em;
        background: #ccc;
        border-radius: 2px;

        position: absolute;
        left: 0;
        top: 50%;

        -webkit-transform: translate(0px, -53%);
        -ms-transform: translate(0px, -53%);
        transform: translate(0px, -53%);

    }

    /* Make the radio elements circular: */
    .#{$s__class-namespace}custom-input[type="radio"] + .#{$s__class-namespace}custom-input-label::before {
        border-radius: 50%;
    }

    /* Define the checkbox :checked state: */
    .#{$s__class-namespace}custom-input[type="checkbox"]:checked + .#{$s__class-namespace}custom-input-label::before {
        background: $s__base-ui-color;
    }

    /* Define the checkbox 'tick': */
    .#{$s__class-namespace}custom-input[type="checkbox"]:checked + .#{$s__class-namespace}custom-input-label::after {
        content: "";
        display: inline-block;
        width: 0.6em;
        height: 0.3em;
        border: solid #fff;
        border-width: 0 0 0.2em 0.2em;

        position: absolute;
        left: 0.22em;
        top: 50%;

        -webkit-transform: translate(0px, -80%) rotate(-50deg);
        -ms-transform: translate(0px, -80%) rotate(-50deg);
        transform: translate(0px, -80%) rotate(-50deg);
    }

    /* Define the radio 'dot': */
    .#{$s__class-namespace}custom-input[type="radio"]:checked + .#{$s__class-namespace}custom-input-label::before {
        background: #fff;
        border-color: $s__base-ui-color;
        border-width: 0.25em;
        border-style: solid;
    }

    /* Adjustments for end (right) alignment: */
    .#{$s__class-namespace}custom-input--align-end[type="checkbox"] + .#{$s__class-namespace}custom-input-label,
    .#{$s__class-namespace}custom-input--align-end[type="radio"] + .#{$s__class-namespace}custom-input-label {
        padding-left: 0;
        padding-right: 1.5em;
    }


    .#{$s__class-namespace}custom-input--align-end[type="checkbox"] + .#{$s__class-namespace}custom-input-label::before,
    .#{$s__class-namespace}custom-input--align-end[type="radio"] + .#{$s__class-namespace}custom-input-label::before {
        left: auto;
        right: 0;
    }

    .#{$s__class-namespace}custom-input--align-end[type="checkbox"]:checked + .#{$s__class-namespace}custom-input-label::after {
        left: auto;
        right: 0.16em;
    }



    /* CUSTOM INPUTS: FILE */
    .#{$s__class-namespace}custom-input[type="file"] {
    }

        /* -webkit hide the button: */
        .#{$s__class-namespace}custom-input[type="file"]::-webkit-file-upload-button {
            border: 0;
            padding: 0;
            margin: 0 ;
            width: 0;
            background: transparent;
        }

        /* Firefox hide the button: */
        @supports (-moz-appearance:meterbar) {
            .#{$s__class-namespace}custom-input[type=file] {
                text-indent: -5.6em;
                padding-right: 0.375rem;
            }
        }

        /* IE10-11, Edge hide the button: */
        .#{$s__class-namespace}custom-input[type=file]::-ms-browse {
            padding: 0;
            margin: -1px;
            width: 0;
            border: 0;
            background: transparent;
        }

        /* IE9 hide the button: (https://jeffclayton.wordpress.com/2014/07/22/internet-explorer-css-hacks-collection/) */
        @media screen and (min-width:0\0) and (min-resolution:.001dpcm) {
            /*
                So far I haven't managed to get this arrangement working properly in IE9, so hiding it:
            */
            .#{$s__class-namespace}button + .#{$s__class-namespace}custom-input[type=file] {
                margin-left: -5.35em;
            }

            .#{$s__class-namespace}custom-input[type="file"] + .#{$s__class-namespace}button {
                min-width: 7em;
                margin-left: -7em;
                text-align: center;
            }
        }
}

@if $fs__include_class_poem {
    .#{$s__class-namespace}poem {
        font-family: cursive;
        background: #fff;
        overflow: auto;
    }
}

/*! Start-CSS. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    START-CSS
    ============================================================================================

    Start-CSS is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

    Notes:

    -moz-calc because this supports FF8+ and I like to be thorough.

    CSS hacks from http://browserstrangeness.com/css_hacks.html
    (hack and browser support in comments above each usage)

    !!! Maybe don't include custom properties in this, I think it over-complicates things and needs
    gradient background overlays to lighten/darken background colors dynamically.
    Possibly include a separate file to add custom property support that overrides what it needs,
    all wrapped in an `@supports`.

    Resources:
    * http://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/
    * https://24ways.org/2006/compose-to-a-vertical-rhythm

    NOTE TO SELF.
    Where borders are concerned, probably best to leave margins alone and use padding to maintain
    baseline-grid. After all, if there's a border, there will have to be padding too.

    overflow-y makes element focussable in FireFox.

|-------------------------------------------------------------------------------------------------*/
// Let the other Fall-Back patterns know that start is being used:
$s__using-Start-CSS: true;

@import '_01-start-functions.scss';
@import '_02-start-mixins.scss';
@import '_03-start-tokens.scss';
@import '_04-start-settings.scss';



//@debug ($s__base-rem-space-unit / 8) - ((($s__input-border-width + 0px) / 1px) * $s__base-rem-1px);

//@debug s__calc-px-from-rem(1.5rem);

/* Output class for reference (tmp): */
/*.ref {
    flbk--base-rem-space-unit: $s__base-rem-space-unit;
    flbk--base-rem-1px: $s__base-rem-1px;
    flbk--root-font-size: $s__root-font-size;
    flbk--root-font-size-percent: $s__root-font-size-percent;
}*/


//@if ($suppress_styles != true) {


// Attempt to organise 'normalisation' by tag.
// All elements are listed, but elements that are non-visual or obsolete are commented out, as are
// elements where no styles are applied.
//
// KEY:
// !     = non-visual element
// --x-- = obselete / deprecated element


// Normalise, Sanitise, A bit of Reset, Scut and Inuit, plus some other opinionated styles.

/*------------------------------------------------------------------------------------------------*\

    ROOT STYLES

\*------------------------------------------------------------------------------------------------*/

/*
    https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
    https://css-tricks.com/snippets/javascript/fix-ie-10-on-windows-phone-8-viewport/

    The following rule fixes a problem with IE10 on Windows 8 snap mode, but apparently causes
    problems on Windows Phone where the only fix seems to be a JS one.

    https://nostrongbeliefs.com/why-i-think-we-shouldnt-use-css-viewport-in-ie10-for-now/

    This reckons it's not worth it and as I can't seem to test the Windows Phone problem (emulator
    on BrowserStack - not real device which is why I _think) I'm not seeing the problem) I think it
    may be safest to keep this out for now.
    - Hmmm affect 8.1 IE11 as well... not good.
    UPDATE: using hack to only apply the viewport declaration to IE10-11 may work?

    https://timkadlec.com/2013/01/windows-phone-8-and-device-width/
*/


//@at-root {
//  @-ms-viewport { width: device-width; }
//}

//@media screen and (-ms-view-state: snapped) {
//    body {
//        background: red !important;
//    }
//}

// For multi-language quotes, consider including the quotes from from CSS Remedy:
// https://github.com/mozdevs/cssremedy/blob/master/quotes.css

:root {
    quotes: '\201c' '\201d' '\2018' '\2019';
}


/*
    1. Change the default box-sizing (-moz prefix for FF8-28).

    2. `min-height` _should_ be what we want here (as declared in inuit css), except that
       `min-height` doesn't works as expected; child elements set to `(min-)height: 100%;` won't
       increase their height - they'll only do that if the parent has `height: 100%;`.
       This can lead to situations where sometimes elements (and thus their visible decoration) do
       not stretch to be tall enough for their content (because they're limited to 100% height).

    3. Force scrollbars to always be visible to prevent awkward 'jumps' when
       navigating between pages that do/do not have enough content to produce
       scrollbars naturally. (I)

    4. Convert the value to a percentage so as not to override user font settings.
       This needs to be on the root node.

    5. Prevent font size adjustments after orientation changes in IE and iOS. (N)

    6. Use a more readable tab size (opinionated).
*/
html {
    -moz-box-sizing: border-box; /* 1 */
    box-sizing: border-box; /* 1 */

    height: 100%; /* 2 */

    overflow-y: scroll; /* 3 */

    color: $s__base-text-color;
    background-color: $s__html-background-color;

    //font-size: #{$s__root-font-size-percent * 1%}; /* 4 */
    font-size: #{$s__root-font-size-em}; /* 4 */


    -ms-text-size-adjust: 100%; /* 5 */
    -webkit-text-size-adjust: 100%; /* 5 */

    padding: 0;
    margin: 0;

    // -- -moz-osx-font-smoothing: grayscale; --
    // -- -webkit-font-smoothing: antialiased; --

    // -- text-rendering: optimizeLegibility; --

    -moz-tab-size: $s__tabsize; /* 6 */
	tab-size: $s__tabsize; /* 6 */
}
/*
    Fix font size for IE9-11 as it can't calculate % to 1 decimal place! Grrr.
*/
@if ($s__root-font-size != 16px) {
    @media #{$s__ie9-11} {
        html {
            font-size: calc(#{($s__root-font-size-em * 100)} / 100);
        }
    }
}


/*
    'Global' reset.

    1. For Mac Safari 6.1-8.
*/
* {
    -webkit-margin-before: 0; /* 1 */
    -webkit-margin-after: 0;  /* 1 */
    -webkit-margin-start: 0;  /* 1 */
    -webkit-margin-end: 0;    /* 1 */
    margin:  0;

    padding: 0;
}


/*
    1. Add box sizing inheritance in all browsers.
       Supporting FF8+ due to Mustard Cut so including for completeness.
    2. Remove repeating backgrounds in all browsers.
*/
*,
::before,
::after {
    -moz-box-sizing: inherit; /* 1 */
         box-sizing: inherit; /* 1 */

    background-repeat: no-repeat; /* 2 */

    -webkit-font-smoothing: inherit;
}

/*
    1. Add text decoration inheritance in all browsers (opinionated). (s)
    2. Add vertical alignment inheritance in all browsers (s).
*/
::before,
::after {
    text-decoration: inherit; /* 1 */

    vertical-align: inherit; /* 2 */
}

/*
    Remove the inner border and padding from form elements in older Firefox.
*/
#{$s__namespace}::-moz-focus-inner {
    margin: 0;

    padding: 0;

    border: 0;
}

/*
    1. Ensure that absolutely positioned child elements expand to the full height of the body.
    2. Allows for layouts such as sticky footers.
    3. Reset any FOUC font match fallback. @TODO Make these vars.
*/
body {
    position: relative; /* 1 */

    display: flex; /* 2 */

    width: 100%;
    min-width: $s__body-min-width;

    min-height: 100%;

    @if $s__body-max-width > 0 {
        max-width: $s__body-max-width;

        margin: $s__body-margin auto;
    } @else {
        max-width: none;

        margin: $s__body-margin;
    }

    padding: $s__body-padding;

    font-family: $s__base-font-family;
    font-size: ($s__base-font-size / $s__root-font-size * 1em);
    line-height: $s__base-rem-space-unit;
    letter-spacing: initial; /* 3 */
    word-spacing: initial; /* 3 */

    background-color: $s__body-background-color;
    color: $s__body-text-color;

    @if $s__use-layout {
        display: -webkit-flex;
        display: -moz-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-direction: column;
           -moz-box-orient: vertical;
           -moz-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column;

    }
}

/* IE9-11 */
/*@media #{$s__ie9-11} {

    body {
        height: 100%;
    }

}*/


/*------------------------------------------------------------------------------------------------*\

    ALL ELEMENTS

\*------------------------------------------------------------------------------------------------*/




@import 'elements/_a.scss';
@import 'elements/_abbr.scss';
//--acronym {}--
@import 'elements/_address.scss';
//--applet {}--
//!area {}
@import 'elements/_article.scss';
@import 'elements/_aside.scss';
@import 'elements/_audio.scss';
@import 'elements/_b.scss';
//base {}
//--basefont {}--
//bdi {}
//bdo {}
//--bgsound {}
//--big {}--
//--blink {}--
@import 'elements/_blockquote.scss';
//^body {}
//br {}
@import 'elements/_button.scss';
@import 'elements/_canvas.scss';
@import 'elements/_caption.scss';
//--center {}
// cite {}
@import 'elements/_code.scss';
//!col {}
//!colgroup {}
//command {}
//content {}
//data {}
//datalist {}
@import 'elements/_dd.scss';
//del {}
@import 'elements/_details.scss';
@import 'elements/_dfn.scss';
//dialog {}
//--dir {}--
//div {}
@import 'elements/_dl.scss';
@import 'elements/_dt.scss';
//element {}
@import 'elements/_em.scss';
//embed {}
@import 'elements/_fieldset.scss';
@import 'elements/_figcaption.scss';
@import 'elements/_figure.scss';
//--font {}--
@import 'elements/_footer.scss';
@import 'elements/_form.scss';
//--frame {}--
//--frameset {}--
//!head {}
@import 'elements/_header.scss';
@import 'elements/_hgroup.scss';
@import 'elements/_h.scss';
@import 'elements/_hr.scss';
//html {} (declared at at the start)
//i {}
@import 'elements/_iframe.scss';
//--image {}--
@import 'elements/_img.scss';
@import 'elements/_input.scss';
//ins {}
//--isindex {}--
@import 'elements/_kbd.scss';
//keygen {}
@import 'elements/_label.scss';
@import 'elements/_legend.scss';
@import 'elements/_li.scss';
//!link {}
//--listing {}--
@import 'elements/_main.scss';
//!map {}
@import 'elements/_mark.scss';
//--marquee {}--
//menu {}
//menuitem {}
//!meta {}
//meter {}
//--multicol {}--
@import 'elements/_nav.scss';
//--nobr {}--
//--noembed {}--
//noframes {}
//noscript {}
@import 'elements/_object.scss';
@import 'elements/_ol.scss';
@import 'elements/_optgroup.scss';
@import 'elements/_option.scss';
//output {}
@import 'elements/_p.scss';
//!param {}
//picture {}
//--plaintext {}--
@import 'elements/_pre.scss';
@import 'elements/_progress.scss';
//q {}
//rp {}
//rt {}
//rtc {}
//ruby {}
//s {}
@import 'elements/_samp.scss';
//!script {}
@import 'elements/_section.scss';
@import 'elements/_select.scss';
//shadow {}
@import 'elements/_small.scss';
//!source {}
//--spacer {}--
//span {}
//--strike {}--
@import 'elements/_strong.scss';
//!style {}
@import 'elements/_sub.scss';
@import 'elements/_summary.scss';
@import 'elements/_sup.scss';
@import 'elements/_svg.scss';
@import 'elements/_table.scss';
//tbody {}
@import 'elements/_td.scss';
@import 'elements/_template.scss';
@import 'elements/_textarea.scss';
//tfoot {}
@import 'elements/_th.scss';
//thead {}
//time {}
//!title {}
//tr {}
//!track {}
//--tt {}--
//u {}
@import 'elements/_ul.scss';
//var {}
@import 'elements/_video.scss';
//wbr {}
//--xmp {}--


/*
    Utilities and other miscellaneous bits:
*/

/*
    1. Remove the tapping delay from clickable elements.
*/
[tabindex] {
    -ms-touch-action: manipulation; /* 1 (IE10) */
    touch-action: manipulation; /* 1 */
}


/*
    Specify the background color, font color, and drop shadow of text selections.
*/
::-moz-selection,
::selection {
    color: $s__selection-text-color;
    background-color: $s__selection-background-color;

    text-shadow: $s__selection-text-shadow;
}

/*
    Highlight :target-ed headings
    Note I can't selected the whole section without it being wrapped in something, and I don't want
    to mess around with that.
*/
main :target {
       -moz-animation: target-fade 3s 1;
    -webkit-animation: target-fade 3s 1;
            animation: target-fade 3s 1;
}

@-moz-keyframes target-fade {
    0% { background-color: $s__target-highlight-color-a; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-a; }
    100% { background-color: $s__target-highlight-color-b; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-b; }
}

@-webkit-keyframes target-fade {
    0% { background-color: $s__target-highlight-color-a; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-a; }
    100% { background-color: $s__target-highlight-color-b; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-b; }
}

@keyframes target-fade {
    0% { background-color: $s__target-highlight-color-a; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-a; }
    100% { background-color: $s__target-highlight-color-b; box-shadow: 0 0 0 1.2rem $s__target-highlight-color-b; }
}

/*
    Give some space to elements targeted by fragments:
*/
[id] {
    scroll-margin-top: $s__scroll-margin-top;
}


@if $s__use-layout {
    body > * {
        margin-bottom: 0;
    }
}


@import '_start-accessibility.scss';
@import '_start-experimental.scss';
@import '_start-visibility.scss';



/*! End Start-CSS */

/*! --------------------------------------------------------------------------------------------- *\
    
    Fall-Back Dropdown v3.0.0
    https://github.com/Fall-Back/Patterns/tree/master/Dropdown
    Copyright (c) 2021, Andy Kirk
    Released under the MIT license https://git.io/vwTVl

    Designed for use with the EM2 [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    Edge, Chrome 39+, Opera 26+, Safari 9+, iOS 9+, Android ~5+, Android UCBrowser ~11.8+
    FF 47+

    PLUS IE11

\* ---------------------------------------------------------------------------------------------- */

$s__dropdown--breakpoint--enhanced:            $s__breakpoint--enhanced;


// Colours:

$s__dropdown--base-ui-color:                   $s__base-ui-color !default;
$s__dropdown--base-text-color:                 $s__base-text-color !default;


$s__dropdown--background-color:                $s__dropdown--base-ui-color !default;
$s__dropdown--text-color:                      #fff !default;

$s__dropdown__control--color:                  $s__dropdown--text-color !default;
$s__dropdown__control--color--alt:             $s__dropdown__control--color !default;
$s__dropdown__control--background-color:       $s__dropdown--background-color !default;
$s__dropdown__control--background-color--alt:  false !default;
$s__dropdown__control--background-color--alt2: false !default;
@if $s__dropdown--background-color != false {
    $s__dropdown__control--background-color--alt:  darken($s__dropdown--background-color, 14%) !default;
    $s__dropdown__control--background-color--alt2: darken($s__dropdown--background-color, 7%) !default;
}

$s__dropdown__control--border-color:           rgba(255,255,255,0.2) !default;
$s__dropdown__control--border-style:           solid !default;
$s__dropdown__control--border-width:           1px !default;
$s__dropdown__control--border-radius:          0 !default;




// Sizes:
$s__dropdown__control--height:                 ($s__base-em-ratio * 1.5em) !default;
$s__dropdown--spacing:                         ($s__dropdown__control--height / 8) !default;


$s__dropdown--padding:                         0 !default;
//$s__dropdown--padding:                        $s__base-rem-space-unit !default;

// Transitions:
$s__dropdown--transition-duration:             ease;
$s__dropdown--transition-timing-function:      0.8s;



// Other:


$s__dropdown-z-index:                          9999 !default;


// Tell the JS that the this CSS has loaded:

/*
    This is a bit of a hack, but it's a way of letting JS know that this CSS has loaded.
    It doesn't work for Opera Mini, but I'm happy to provide this browser only with the
    unenhanced version.
    UPDATE: Due to problem with FOBP, now checking for existence of class in styesheet earlier
    on, so this isn't needed:
*/
/*.nav-bar::before {
    content: 'CSS Loaded';
    display: none;
}*/
// Use this instead:
.js-has--dropdown {
    // This could be any inconsequential declaration:
    border: 0;
}

/* -- Basic/fallback layout --------------------------------------------------------------------- */

    /* -- .dropdown ------------------------------------------------------------------------------*/

    /*
        1. iOS, OSX
    */
    .dropdown {
        margin: 0; /* 1 */
    }

    /* -------------------------------------------------------------------------------------------*/




    /* -- .dropdown__area ------------------------------------------------------------------------*/

    /*
        1. Duplicating parent background-color here. There HAS to be a color here for the pattern
           to work, the parent background-color is there to allow things to be NOT BROKEN on
           browsers that don't support HTML semantic elements.

        2. This hides focus shadow so leaving out for now.
           --Prevent any overflow and possible contain floats.--
    */
    .dropdown .dropdown__area {
        @if $s__dropdown--background-color != false {
            background-color: $s__dropdown--background-color;/* 1 */
        }
        color: $s__dropdown--text-color;
        //overflow: hidden; /* 2 */
        padding: $s__dropdown--padding;
    }

    /* -------------------------------------------------------------------------------------------*/




    /* -- .dropdown__control ----------------------------------------------------------------------*/
	/*
		1. This removes StartCSS outline focus, so leave it out.
           --These override control styles defined as part of StartCSS. I may consider making these
		   customisable via more variables.--
	*/
    .dropdown .dropdown__control {
        display: block;
        margin: 0;
        //padding: ($s__dropdown--spacing * 1.333333) ($s__dropdown--spacing * 2);
        padding-left: $s__dropdown--spacing * 2;
        padding-right: $s__dropdown--spacing * 2;
		padding-bottom: 0; /* 1 */
		padding-top: 0; /* 1 */

        border: 0;
        border-radius: $s__dropdown__control--border-radius;

        line-height: $s__dropdown__control--height;

        text-decoration: none;
        outline: 0;

		//box-shadow: none; /* 1 */
    }

    // This is to turn off StartCSS's hover border:
    /*.dropdown .dropdown__control:hover,
    .dropdown .dropdown__control:active,
    .dropdown .dropdown__control:focus {
        border: 0;
    }*/
    
    .dropdown .dropdown__control:focus {
        position: relative;
        z-index: 2;
    }

    .dropdown__control--centered {
        text-align: center;
    }


    /*
        Fix for Opera Mini vertical centering:
        (affects Opera 12.10-16 as well)
    */
    _:-o-prefocus, body:last-child .dropdown .dropdown__control {
        //line-height: 1.71428571429 !important;
        line-height: $s__dropdown__control--height !important;


    }


    .dropdown .dropdown__control {
        color: $s__dropdown__control--color;
        @if $s__dropdown__control--background-color != false {
            background-color: $s__dropdown__control--background-color;
        }
    }

    /*
        Provide interaction effects for dropdown links that ARE links:
        (this excludes submenu heading links - note that submenu links should never also be
        submenu heading links)
    */

    .dropdown .dropdown__control:hover,
    .dropdown .dropdown__control:active,
    .dropdown .dropdown__control[aria-expanded="true"] {
        color: $s__dropdown__control--color--alt;
        @if $s__dropdown__control--background-color--alt != false {
            background-color: $s__dropdown__control--background-color--alt;
        }
    }

    .dropdown .dropdown__control:focus {
        color: $s__dropdown__control--color--alt;
        @if $s__dropdown__control--background-color--alt2 != false {
            background-color: $s__dropdown__control--background-color--alt2;
        }
    }


    .dropdown .dropdown__control {
        display: none;
    }

    /*
        iOS, OSX
    */
    .dropdown .dropdown__area {
        margin: 0;
        z-index: $s__dropdown-z-index;
    }

    /* -------------------------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------------------------*/


/* ********************************************************************************************** */
/* -- Enhanced layout --------------------------------------------------------------------------- */
/*
    This layout can only be used if JS is there to support the toggling of hidden submenus.
    (CSS only attempts weren't good enough)
    So, scoping these styles to the 'js-dropdown' class.
*/

    @mixin activate-dropdown ($namespace: "") {

        // Variable aliases for ease of comprehension:
        $td:$s__dropdown--transition-duration;
        $tf:$s__dropdown--transition-timing-function;

        .dropdown.dropdown#{$namespace} {

            display: block;

            & .dropdown__area {
                position: absolute;

                visibility: hidden;
                opacity: 0;
                transform: scale(0);
            }

            & .dropdown__area--is-animating {
                transition: opacity    $td  $tf,
                            visibility 0s   $tf  $td,
                            transform  0s   $tf  $td;
            }

            & .dropdown__area--is-open {
                visibility: visible;
                opacity: 1;
                transform: scale(1);  /* [1] */

                transition: opacity $td  $tf;
            }



            & .dropdown__control {
                display: block;
            }

            & .dropdown__control .icon--is-open,
            & .dropdown__control[aria-expanded="true"] .icon--is-closed {
                display: none;
            }

            & .dropdown__control .icon--is-closed,
            & .dropdown__control[aria-expanded="true"] .icon--is-open {
                display: inline;
            }

            /*& .dropdown__control[aria-expanded="true"] ~ .dropdown__area {
                visibility: visible;
                opacity: 1;

                transition: opacity $td  $tf;
            }*/
        }
    }

    @include activate-dropdown("--all-widths");

    .js-cmr--narrow {
        @include activate-dropdown("--only-narrow");
    }

    .js-cmr--wide {
        @include activate-dropdown("--only-wide");
    }


    /*@media only screen and (max-width:$s__dropdown--breakpoint--enhanced) {

       @include activate-dropdown("--only-narrow");

    }

    @media only screen and (min-width:$s__dropdown--breakpoint--enhanced) {

       @include activate-dropdown("--only-wide");

    }*/


/* -----------------------------------------------------------------------------------------------*/
